{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/pages/faculty.module.css","webpack:///./src/components/seo.js","webpack:///./src/pages/faculty.js"],"names":["Card","children","style","className","border","padding","module","exports","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Grid","styles","grid","FacultyPage","data","allFacultyJson","nodes","map","department","key","marginTop","members","member","card","fixed","image","childImageSharp","borderRadius","overflow","marginBottom","fontWeight","fontSize","role"],"mappings":"4FAAA,yBAqBeA,IAlBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UAApB,OACX,yBACEA,UAAWA,EACXD,MAAK,eACHE,OAAQ,oBACRC,QAAS,UACNH,IAGJD,K,qBCXLK,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,gC,kCCD9D,0DAYA,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,oCCvFf,sIAaMiB,EAAO,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAH,OAAkB,yBAAKE,UAAWuB,IAAOC,MAAO1B,IAiE9C2B,UA5DK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjB,MAAM,YACX,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,yBACEV,MAAO,CACLG,QAAS,YAGX,uCACA,2FACCwB,EAAKC,eAAeC,MAAMC,KAAI,SAAAC,GAAU,OACvC,yBAAKC,IAAKD,EAAWrB,OACnB,wBAAIV,MAAO,CAAEiC,UAAW,SAAWF,EAAWrB,OAC9C,kBAACa,EAAD,KACGQ,EAAWG,QAAQJ,KAAI,SAAAK,GAAM,OAC5B,kBAAC,IAAD,CAAMH,IAAKG,EAAOlB,KAAMhB,UAAWuB,IAAOY,MACxC,kBAAC,IAAD,CACEC,MAAOF,EAAOG,MAAMC,gBAAgBF,MACpCrC,MAAO,CAGLwC,aAAc,MACdC,SAAU,SACVC,aAAc,UAGlB,yBACE1C,MAAO,CACL2C,WAAY,MACZC,SAAU,UAGXT,EAAOlB,MAEV,yBACEjB,MAAO,CACL4C,SAAU,UAGXT,EAAOU","file":"component---src-pages-faculty-js-8d8ce74970486a028ce5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ children, style, className }) => (\n  <div\n    className={className}\n    style={{\n      border: '1px solid #eaeaef',\n      padding: '2.5rem',\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n);\nCard.propTypes = {\n  children: PropTypes.node.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"faculty-module--grid--13F4E\",\"card\":\"faculty-module--card--3P7t9\"};","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/layout';\nimport Navbar from '../components/navbar';\nimport Container from '../components/container';\nimport Card from '../components/card';\nimport SEO from '../components/seo';\n\nimport styles from './faculty.module.css';\n\nconst Grid = ({ children }) => <div className={styles.grid}>{children}</div>;\nGrid.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst FacultyPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Faculty\" />\n    <Container>\n      <Navbar />\n      <div\n        style={{\n          padding: '10rem 0',\n        }}\n      >\n        <h1>Faculty</h1>\n        <p>The Exun faculty forms the bedrock of all of its activities.</p>\n        {data.allFacultyJson.nodes.map(department => (\n          <div key={department.title}>\n            <h2 style={{ marginTop: '5rem' }}>{department.title}</h2>\n            <Grid>\n              {department.members.map(member => (\n                <Card key={member.name} className={styles.card}>\n                  <Img\n                    fixed={member.image.childImageSharp.fixed}\n                    style={{\n                      // height: 80,\n                      // width: 80,\n                      borderRadius: '50%',\n                      overflow: 'hidden',\n                      marginBottom: '1rem',\n                    }}\n                  />\n                  <div\n                    style={{\n                      fontWeight: '600',\n                      fontSize: '1.1em',\n                    }}\n                  >\n                    {member.name}\n                  </div>\n                  <div\n                    style={{\n                      fontSize: '0.9em',\n                    }}\n                  >\n                    {member.role}\n                  </div>\n                </Card>\n              ))}\n            </Grid>\n          </div>\n        ))}\n      </div>\n    </Container>\n  </Layout>\n);\nFacultyPage.propTypes = {\n  data: PropTypes.shape({\n    allFacultyJson: PropTypes.shape({\n      nodes: PropTypes.array,\n    }),\n  }).isRequired,\n};\n\nexport default FacultyPage;\n\nexport const query = graphql`\n  query FacultyQuery {\n    allFacultyJson {\n      nodes {\n        title\n        members {\n          name\n          role\n          image {\n            childImageSharp {\n              fixed(width: 80, height: 80, cropFocus: CENTER) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}