{"version":3,"sources":["webpack:///./src/pages/archive.js","webpack:///./src/components/seo.js"],"names":["Archive","data","title","style","padding","allArchiveJson","nodes","map","achievement","year","symposium","organisingSchool","position","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,gFAsDeA,UA7CC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,yBACEC,MAAO,CACLC,QAAS,YAGX,uCACA,+DACA,+BACE,+BACE,4BACE,oCACA,yCACA,iDACA,yCAEHH,EAAKI,eAAeC,MAAMC,KAAI,SAAAC,GAAW,OACxC,4BACE,4BAAKA,EAAYC,MACjB,4BAAKD,EAAYE,WACjB,4BAAKF,EAAYG,kBACjB,4BAC4B,YAAzBH,EAAYI,SAAyB,gCAASJ,EAAYI,UAAqB,8BAAOJ,EAAYI,sB,kCCnCnH,0DAYA,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMd,EAAS,EAATA,MAC9Be,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFb,MAAOA,EACPoB,cAAa,QAAUL,EAAKG,aAAalB,MACzCc,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAStB,GAEX,CACEuB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAAStB,GAEX,CACEqB,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-archive-js-e1921999d1d39a7bcec3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Navbar from '../components/navbar';\nimport Container from '../components/container';\nimport SEO from '../components/seo';\n\nconst Archive = ({ data }) => (\n  <Layout>\n    <SEO title=\"Archive\" />\n    <Container>\n      <Navbar />\n      <div\n        style={{\n          padding: '10rem 0',\n        }}\n      >\n        <h1>Archive</h1>\n        <p>Our achievements over the years.</p>\n        <table>\n          <tbody>\n            <tr>\n              <th>Year</th>\n              <th>Symposium</th>\n              <th>Organising School</th>\n              <th>Position</th>\n            </tr>\n          {data.allArchiveJson.nodes.map(achievement => (\n            <tr>\n              <td>{achievement.year}</td>\n              <td>{achievement.symposium}</td>\n              <td>{achievement.organisingSchool}</td>\n              <td>\n                {achievement.position === \"Winners\" ? <strong>{achievement.position}</strong> : <span>{achievement.position}</span>}\n              </td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n      </div>\n    </Container>\n  </Layout>\n);\n\nArchive.propTypes = {\n  data: PropTypes.shape({\n    allArchiveJson: PropTypes.shape({\n      nodes: PropTypes.array,\n    }),\n  }).isRequired,\n};\n\nexport default Archive;\n\nexport const query = graphql`\n  query ArchivesQuery {\n    allArchiveJson {\n      nodes {\n        year\n        symposium\n        organisingSchool\n        position\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}